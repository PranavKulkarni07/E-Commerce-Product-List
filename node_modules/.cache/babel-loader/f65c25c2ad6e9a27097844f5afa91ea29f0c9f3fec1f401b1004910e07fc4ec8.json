{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Data from\"../Charts/Data\";import BarChartData from\"../Charts/BarChartData\";import PieChartData from\"../Charts/PieChartData\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Statistics=()=>{const[selectedMonth,setSelectedMonth]=useState(\"March\");const[statsData,setStatsData]=useState({});const charts={display:\"flex\"};const ApiUrl=process.env.API_URL;//Fetches Data for displaying Statistics for Data, Bar Chart and Pie Chart\nuseEffect(()=>{const fetchData=async(req,res)=>{try{const response=await axios.get(\"\".concat(ApiUrl,\"/statistic/\").concat(selectedMonth));setStatsData(response.data);}catch(error){console.error(\"Error in Fetching Data: \",error);}};fetchData();},[selectedMonth]);const handleDropdownChange=event=>{setSelectedMonth(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"month-stats\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"dropdown\",children:\"Select Month:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"dropdown\",value:selectedMonth,onChange:handleDropdownChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select...\"}),/*#__PURE__*/_jsx(\"option\",{value:\"January\",children:\"January\"}),/*#__PURE__*/_jsx(\"option\",{value:\"February\",children:\"February\"}),/*#__PURE__*/_jsx(\"option\",{value:\"March\",children:\"March\"}),/*#__PURE__*/_jsx(\"option\",{value:\"April\",children:\"April\"}),/*#__PURE__*/_jsx(\"option\",{value:\"May\",children:\"May\"}),/*#__PURE__*/_jsx(\"option\",{value:\"June\",children:\"June\"}),/*#__PURE__*/_jsx(\"option\",{value:\"July\",children:\"July\"}),/*#__PURE__*/_jsx(\"option\",{value:\"August\",children:\"August\"}),/*#__PURE__*/_jsx(\"option\",{value:\"September\",children:\"September\"}),/*#__PURE__*/_jsx(\"option\",{value:\"October\",children:\"October\"}),/*#__PURE__*/_jsx(\"option\",{value:\"November\",children:\"November\"}),/*#__PURE__*/_jsx(\"option\",{value:\"December\",children:\"December\"})]}),selectedMonth&&/*#__PURE__*/_jsx(\"div\",{className:\"selected-month\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dc\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Data Stats (\",selectedMonth,\" Month)\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"stats-container\",children:/*#__PURE__*/_jsx(Data,{totalSaleAmount:statsData.totalSaleAmount,totalSoldItems:statsData.totalSoldItems,totalNotSoldItems:statsData.totalNotSoldItems})})]}),/*#__PURE__*/_jsxs(\"div\",{style:charts,children:[/*#__PURE__*/_jsx(BarChartData,{priceranges:statsData.priceRanges,month:selectedMonth}),/*#__PURE__*/_jsxs(\"div\",{className:\"pcb\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pc\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Pie Chart Stats (\",selectedMonth,\" Month)\"]})}),/*#__PURE__*/_jsx(PieChartData,{categoryCounts:statsData.categoryCounts,month:selectedMonth})]})]})]});};export default Statistics;","map":{"version":3,"names":["React","useState","useEffect","axios","Data","BarChartData","PieChartData","jsx","_jsx","jsxs","_jsxs","Statistics","selectedMonth","setSelectedMonth","statsData","setStatsData","charts","display","ApiUrl","process","env","API_URL","fetchData","req","res","response","get","concat","data","error","console","handleDropdownChange","event","target","value","children","className","htmlFor","id","onChange","totalSaleAmount","totalSoldItems","totalNotSoldItems","style","priceranges","priceRanges","month","categoryCounts"],"sources":["C:/Users/SHRIKRISHNA/Desktop/Roxiler_Task/Client/products/src/components/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Data from \"../Charts/Data\";\r\nimport BarChartData from \"../Charts/BarChartData\";\r\nimport PieChartData from \"../Charts/PieChartData\";\r\n\r\nconst Statistics = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(\"March\");\r\n  const [statsData, setStatsData] = useState({});\r\n  const charts = { display: \"flex\" };\r\n  const ApiUrl = process.env.API_URL;\r\n\r\n  //Fetches Data for displaying Statistics for Data, Bar Chart and Pie Chart\r\n  useEffect(() => {\r\n    const fetchData = async (req, res) => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${ApiUrl}/statistic/${selectedMonth}`\r\n        );\r\n        setStatsData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error in Fetching Data: \", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [selectedMonth]);\r\n\r\n  const handleDropdownChange = (event) => {\r\n    setSelectedMonth(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Takes Month Name as Input */}\r\n      <div className=\"month-stats\">\r\n        <label htmlFor=\"dropdown\">Select Month:</label>\r\n        <select\r\n          id=\"dropdown\"\r\n          value={selectedMonth}\r\n          onChange={handleDropdownChange}\r\n        >\r\n          <option value=\"\">Select...</option>\r\n          <option value=\"January\">January</option>\r\n          <option value=\"February\">February</option>\r\n          <option value=\"March\">March</option>\r\n          <option value=\"April\">April</option>\r\n          <option value=\"May\">May</option>\r\n          <option value=\"June\">June</option>\r\n          <option value=\"July\">July</option>\r\n          <option value=\"August\">August</option>\r\n          <option value=\"September\">September</option>\r\n          <option value=\"October\">October</option>\r\n          <option value=\"November\">November</option>\r\n          <option value=\"December\">December</option>\r\n        </select>\r\n        {selectedMonth && <div className=\"selected-month\"></div>}\r\n        {/*Renders Data such as Sold Items,Not Sold Items and Total Sales*/}\r\n        <div className=\"dc\">\r\n          <p>Data Stats ({selectedMonth} Month)</p>\r\n        </div>\r\n        <div className=\"stats-container\">\r\n          <Data\r\n            totalSaleAmount={statsData.totalSaleAmount}\r\n            totalSoldItems={statsData.totalSoldItems}\r\n            totalNotSoldItems={statsData.totalNotSoldItems}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Renders Bar Chart*/}\r\n      <div style={charts}>\r\n        <BarChartData\r\n          priceranges={statsData.priceRanges}\r\n          month={selectedMonth}\r\n        />\r\n        <div className=\"pcb\">\r\n          {/* Renders Pie Chart */}\r\n          <div className=\"pc\">\r\n            <p>Pie Chart Stats ({selectedMonth} Month)</p>\r\n          </div>\r\n          <PieChartData\r\n            categoryCounts={statsData.categoryCounts}\r\n            month={selectedMonth}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,YAAY,KAAM,wBAAwB,CACjD,MAAO,CAAAC,YAAY,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CAC3D,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9C,KAAM,CAAAe,MAAM,CAAG,CAAEC,OAAO,CAAE,MAAO,CAAC,CAClC,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,OAAO,CAElC;AACAnB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,SAAS,CAAG,KAAAA,CAAOC,GAAG,CAAEC,GAAG,GAAK,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,GAAG,IAAAC,MAAA,CAC3BT,MAAM,gBAAAS,MAAA,CAAcf,aAAa,CACtC,CAAC,CACDG,YAAY,CAACU,QAAQ,CAACG,IAAI,CAAC,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CACF,CAAC,CACDP,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACV,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAmB,oBAAoB,CAAIC,KAAK,EAAK,CACtCnB,gBAAgB,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACtC,CAAC,CAED,mBACExB,KAAA,QAAAyB,QAAA,eAEEzB,KAAA,QAAK0B,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1B3B,IAAA,UAAO6B,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,eAAa,CAAO,CAAC,cAC/CzB,KAAA,WACE4B,EAAE,CAAC,UAAU,CACbJ,KAAK,CAAEtB,aAAc,CACrB2B,QAAQ,CAAER,oBAAqB,CAAAI,QAAA,eAE/B3B,IAAA,WAAQ0B,KAAK,CAAC,EAAE,CAAAC,QAAA,CAAC,WAAS,CAAQ,CAAC,cACnC3B,IAAA,WAAQ0B,KAAK,CAAC,SAAS,CAAAC,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC3B,IAAA,WAAQ0B,KAAK,CAAC,UAAU,CAAAC,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C3B,IAAA,WAAQ0B,KAAK,CAAC,OAAO,CAAAC,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC3B,IAAA,WAAQ0B,KAAK,CAAC,OAAO,CAAAC,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC3B,IAAA,WAAQ0B,KAAK,CAAC,KAAK,CAAAC,QAAA,CAAC,KAAG,CAAQ,CAAC,cAChC3B,IAAA,WAAQ0B,KAAK,CAAC,MAAM,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC3B,IAAA,WAAQ0B,KAAK,CAAC,MAAM,CAAAC,QAAA,CAAC,MAAI,CAAQ,CAAC,cAClC3B,IAAA,WAAQ0B,KAAK,CAAC,QAAQ,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC3B,IAAA,WAAQ0B,KAAK,CAAC,WAAW,CAAAC,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC5C3B,IAAA,WAAQ0B,KAAK,CAAC,SAAS,CAAAC,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC3B,IAAA,WAAQ0B,KAAK,CAAC,UAAU,CAAAC,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C3B,IAAA,WAAQ0B,KAAK,CAAC,UAAU,CAAAC,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACpC,CAAC,CACRvB,aAAa,eAAIJ,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAM,CAAC,cAExD5B,IAAA,QAAK4B,SAAS,CAAC,IAAI,CAAAD,QAAA,cACjBzB,KAAA,MAAAyB,QAAA,EAAG,cAAY,CAACvB,aAAa,CAAC,SAAO,EAAG,CAAC,CACtC,CAAC,cACNJ,IAAA,QAAK4B,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9B3B,IAAA,CAACJ,IAAI,EACHoC,eAAe,CAAE1B,SAAS,CAAC0B,eAAgB,CAC3CC,cAAc,CAAE3B,SAAS,CAAC2B,cAAe,CACzCC,iBAAiB,CAAE5B,SAAS,CAAC4B,iBAAkB,CAChD,CAAC,CACC,CAAC,EACH,CAAC,cAENhC,KAAA,QAAKiC,KAAK,CAAE3B,MAAO,CAAAmB,QAAA,eACjB3B,IAAA,CAACH,YAAY,EACXuC,WAAW,CAAE9B,SAAS,CAAC+B,WAAY,CACnCC,KAAK,CAAElC,aAAc,CACtB,CAAC,cACFF,KAAA,QAAK0B,SAAS,CAAC,KAAK,CAAAD,QAAA,eAElB3B,IAAA,QAAK4B,SAAS,CAAC,IAAI,CAAAD,QAAA,cACjBzB,KAAA,MAAAyB,QAAA,EAAG,mBAAiB,CAACvB,aAAa,CAAC,SAAO,EAAG,CAAC,CAC3C,CAAC,cACNJ,IAAA,CAACF,YAAY,EACXyC,cAAc,CAAEjC,SAAS,CAACiC,cAAe,CACzCD,KAAK,CAAElC,aAAc,CACtB,CAAC,EACC,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}