{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRIKRISHNA\\\\Desktop\\\\Roxiler_Task\\\\Client\\\\products\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// ProductList.jsx\nimport React, { useState, useEffect } from \"react\";\nimport ProductCard from \"./ProductCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:9000/home\");\n        setProducts(response.data);\n      } catch (error) {\n        console.error(\"Error in Fetching Data: \", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const pageSize = 6;\n  const totalPages = Math.ceil(products.length / pageSize);\n\n  // Ensure currentPage is within the valid range\n  const validPage = Math.min(Math.max(1, currentPage), totalPages);\n  const startIndex = (validPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const currentProducts = products.slice(startIndex, endIndex);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [Array.from({\n      length: totalPages\n    }).map((_, pageIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card-container ${pageIndex + 1 === validPage ? \"visible\" : \"hidden\"}`,\n      children: currentProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        title: product.title,\n        description: product.description,\n        imageSrc: product.image\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, pageIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: validPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"8nY6qL/Cy86RWLz1/YYcIEWlCyI=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","axios","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","currentPage","setCurrentPage","fetchData","response","get","data","error","console","pageSize","totalPages","Math","ceil","length","validPage","min","max","startIndex","endIndex","currentProducts","slice","handlePageChange","page","className","children","Array","from","map","_","pageIndex","product","title","description","imageSrc","image","id","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SHRIKRISHNA/Desktop/Roxiler_Task/Client/products/src/components/ProductList.js"],"sourcesContent":["// ProductList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:9000/home\");\r\n        setProducts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error in Fetching Data: \", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const pageSize = 6;\r\n  const totalPages = Math.ceil(products.length / pageSize);\r\n\r\n  // Ensure currentPage is within the valid range\r\n  const validPage = Math.min(Math.max(1, currentPage), totalPages);\r\n\r\n  const startIndex = (validPage - 1) * pageSize;\r\n  const endIndex = startIndex + pageSize;\r\n  const currentProducts = products.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      {Array.from({ length: totalPages }).map((_, pageIndex) => (\r\n        <div\r\n          key={pageIndex}\r\n          className={`card-container ${\r\n            pageIndex + 1 === validPage ? \"visible\" : \"hidden\"\r\n          }`}\r\n        >\r\n          {currentProducts.map((product) => (\r\n            <ProductCard\r\n              key={product.id}\r\n              title={product.title}\r\n              description={product.description}\r\n              imageSrc={product.image}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={validPage === index + 1 ? \"active\" : \"\"}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}