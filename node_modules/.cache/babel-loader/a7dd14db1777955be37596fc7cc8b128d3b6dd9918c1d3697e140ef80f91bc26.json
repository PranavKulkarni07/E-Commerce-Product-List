{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import ProductCard from\"./ProductCard\";import axios from\"axios\";//Product Cards List Component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ProductList=()=>{const[products,setProducts]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[selectedMonth,setSelectedMonth]=useState(\"March\");const[searchValue,setSearchValue]=useState(\"\");const ApiUrl=process.env.API_URL||\"http://localhost:9000\";//Fetches Data based on Selected Month and Search Value\nconst fetchData=useCallback(async()=>{try{console.log(\"API URL\",ApiUrl);const response=await axios.post(\"\".concat(ApiUrl,\"/search/\").concat(selectedMonth),{searchValue:searchValue});setProducts(response.data);}catch(error){console.error(\"Error in Fetching Data: \",error);}},[ApiUrl,selectedMonth,searchValue]);useEffect(()=>{fetchData();},[fetchData]);//Pagination Code\nconst pageSize=6;const totalCards=products.length;const totalPages=Math.ceil(totalCards/pageSize);const validPage=Math.min(Math.max(1,currentPage),totalPages);const startIndex=(validPage-1)*pageSize;const endIndex=startIndex+pageSize;const currentProducts=products.slice(startIndex,endIndex);const handleSearchChange=e=>{setSearchValue(e.target.value);};const handleSearch=()=>{setCurrentPage(1);fetchData();};const handleClearSearch=()=>{setSearchValue(\"\");setCurrentPage(1);};const handleNextPage=()=>{setCurrentPage(prevPage=>Math.min(prevPage+1,totalPages));};const handlePrevPage=()=>{setCurrentPage(prevPage=>Math.max(prevPage-1,1));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Month:\"}),/*#__PURE__*/_jsx(\"select\",{onChange:e=>setSelectedMonth(e.target.value),value:selectedMonth,children:Array.from({length:12}).map((_,index)=>/*#__PURE__*/_jsx(\"option\",{value:getMonthName(index),children:getMonthName(index)},index))}),/*#__PURE__*/_jsx(\"label\",{children:\"Search:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchValue,onChange:handleSearchChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClearSearch,children:\"Clear Search\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:currentProducts.map(product=>/*#__PURE__*/_jsx(ProductCard,{title:product.title,price:product.price,imageSrc:product.image},product.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevPage,children:\"< Previous\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Page \",validPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,children:\"Next >\"})]})]});};const getMonthName=index=>{const monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];return monthNames[index];};export default ProductList;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ProductCard","axios","jsx","_jsx","jsxs","_jsxs","ProductList","products","setProducts","currentPage","setCurrentPage","selectedMonth","setSelectedMonth","searchValue","setSearchValue","ApiUrl","process","env","API_URL","fetchData","console","log","response","post","concat","data","error","pageSize","totalCards","length","totalPages","Math","ceil","validPage","min","max","startIndex","endIndex","currentProducts","slice","handleSearchChange","e","target","value","handleSearch","handleClearSearch","handleNextPage","prevPage","handlePrevPage","children","className","onChange","Array","from","map","_","index","getMonthName","type","onClick","product","title","price","imageSrc","image","id","monthNames"],"sources":["C:/Users/SHRIKRISHNA/Desktop/Roxiler_Task/Client/products/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport axios from \"axios\";\r\n\r\n//Product Cards List Component\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedMonth, setSelectedMonth] = useState(\"March\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const ApiUrl = process.env.API_URL || \"http://localhost:9000\";\r\n\r\n  //Fetches Data based on Selected Month and Search Value\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      console.log(\"API URL\", ApiUrl);\r\n      const response = await axios.post(`${ApiUrl}/search/${selectedMonth}`, {\r\n        searchValue: searchValue,\r\n      });\r\n      setProducts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error in Fetching Data: \", error);\r\n    }\r\n  }, [ApiUrl, selectedMonth, searchValue]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  //Pagination Code\r\n  const pageSize = 6;\r\n  const totalCards = products.length;\r\n  const totalPages = Math.ceil(totalCards / pageSize);\r\n\r\n  const validPage = Math.min(Math.max(1, currentPage), totalPages);\r\n\r\n  const startIndex = (validPage - 1) * pageSize;\r\n  const endIndex = startIndex + pageSize;\r\n  const currentProducts = products.slice(startIndex, endIndex);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    fetchData();\r\n  };\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchValue(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, totalPages));\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Takes Month Name as Input */}\r\n      <div className=\"search-container\">\r\n        <label>Select Month:</label>\r\n        <select\r\n          onChange={(e) => setSelectedMonth(e.target.value)}\r\n          value={selectedMonth}\r\n        >\r\n          {Array.from({ length: 12 }).map((_, index) => (\r\n            <option key={index} value={getMonthName(index)}>\r\n              {getMonthName(index)}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {/* Takes Seacrh Value as Input */}\r\n        <label>Search:</label>\r\n        <input type=\"text\" value={searchValue} onChange={handleSearchChange} />\r\n        <button onClick={handleSearch}>Search</button>\r\n        <button onClick={handleClearSearch}>Clear Search</button>\r\n      </div>\r\n      {/* Renders Product List */}\r\n      <div className=\"card-container\">\r\n        {currentProducts.map((product) => (\r\n          <ProductCard\r\n            key={product.id}\r\n            title={product.title}\r\n            price={product.price}\r\n            imageSrc={product.image}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* Pagination Feature */}\r\n      <div className=\"pagination\">\r\n        <button onClick={handlePrevPage}>&lt; Previous</button>\r\n        <p>\r\n          Page {validPage} of {totalPages}\r\n        </p>\r\n        <button onClick={handleNextPage}>Next &gt;</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getMonthName = (index) => {\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  return monthNames[index];\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}