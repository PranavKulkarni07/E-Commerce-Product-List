{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRIKRISHNA\\\\Desktop\\\\Roxiler_Task\\\\Client\\\\products\\\\src\\\\Charts\\\\PieChartData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PieChartData = ({\n  categoryCounts,\n  month\n}) => {\n  _s();\n  const chartRef = useRef();\n  useEffect(() => {\n    if (!categoryCounts || Object.keys(categoryCounts).length === 0) {\n      return;\n    }\n    const width = 400;\n    const height = 400;\n    const radius = Math.min(width, height) / 2;\n    const color = d3.scaleOrdinal().range([\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#33FF99\"]);\n    const data = Object.entries(categoryCounts).map(([category, count]) => ({\n      category,\n      count\n    }));\n    const svg = d3.select(chartRef.current).selectAll(\"svg\").data([null]).join(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`);\n    const arc = d3.arc().outerRadius(radius - 10).innerRadius(0);\n    const pie = d3.pie().value(d => d.count);\n    const arcs = svg.selectAll(\"arc\").data(pie(data)).enter().append(\"g\");\n    arcs.append(\"path\").attr(\"d\", arc).attr(\"fill\", d => color(d.data.category)).attr(\"stroke\", \"#fff\").style(\"stroke-width\", \"2px\");\n    arcs.append(\"text\").attr(\"transform\", d => `translate(${arc.centroid(d)})`).attr(\"dy\", \"0.35em\").style(\"text-anchor\", \"middle\").text(d => `${d.data.category} (${((d.endAngle - d.startAngle) / (2 * Math.PI) * 100).toFixed(2)}%)`).call(wrap, 60); // Wrap text function\n\n    // Wrap text function\n    function wrap(text, width) {\n      text.each(function () {\n        const text = d3.select(this);\n        const words = text.text().split(/\\s+/).reverse();\n        let word;\n        let line = [];\n        let lineNumber = 0;\n        const lineHeight = 1.1; // ems\n        const y = text.attr(\"y\");\n        const x = text.attr(\"x\");\n        const dy = parseFloat(text.attr(\"dy\"));\n        let tspan = text.text(null).append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n        while (word = words.pop()) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n          }\n        }\n      });\n    }\n  }, [categoryCounts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Categories Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"(\", month, \" Month)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PieChartData, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PieChartData;\nexport default PieChartData;\nvar _c;\n$RefreshReg$(_c, \"PieChartData\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","PieChartData","categoryCounts","month","_s","chartRef","Object","keys","length","width","height","radius","Math","min","color","scaleOrdinal","range","data","entries","map","category","count","svg","select","current","selectAll","join","attr","append","arc","outerRadius","innerRadius","pie","value","d","arcs","enter","style","centroid","text","endAngle","startAngle","PI","toFixed","call","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","x","dy","parseFloat","tspan","pop","push","node","getComputedTextLength","children","fileName","_jsxFileName","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/SHRIKRISHNA/Desktop/Roxiler_Task/Client/products/src/Charts/PieChartData.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst PieChartData = ({ categoryCounts, month }) => {\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!categoryCounts || Object.keys(categoryCounts).length === 0) {\r\n      return;\r\n    }\r\n\r\n    const width = 400;\r\n    const height = 400;\r\n    const radius = Math.min(width, height) / 2;\r\n\r\n    const color = d3\r\n      .scaleOrdinal()\r\n      .range([\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#33FF99\"]);\r\n\r\n    const data = Object.entries(categoryCounts).map(([category, count]) => ({\r\n      category,\r\n      count,\r\n    }));\r\n\r\n    const svg = d3\r\n      .select(chartRef.current)\r\n      .selectAll(\"svg\")\r\n      .data([null])\r\n      .join(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2},${height / 2})`);\r\n\r\n    const arc = d3\r\n      .arc()\r\n      .outerRadius(radius - 10)\r\n      .innerRadius(0);\r\n\r\n    const pie = d3.pie().value((d) => d.count);\r\n\r\n    const arcs = svg.selectAll(\"arc\").data(pie(data)).enter().append(\"g\");\r\n\r\n    arcs\r\n      .append(\"path\")\r\n      .attr(\"d\", arc)\r\n      .attr(\"fill\", (d) => color(d.data.category))\r\n      .attr(\"stroke\", \"#fff\")\r\n      .style(\"stroke-width\", \"2px\");\r\n\r\n    arcs\r\n      .append(\"text\")\r\n      .attr(\"transform\", (d) => `translate(${arc.centroid(d)})`)\r\n      .attr(\"dy\", \"0.35em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .text(\r\n        (d) =>\r\n          `${d.data.category} (${(\r\n            ((d.endAngle - d.startAngle) / (2 * Math.PI)) *\r\n            100\r\n          ).toFixed(2)}%)`\r\n      )\r\n      .call(wrap, 60); // Wrap text function\r\n\r\n    // Wrap text function\r\n    function wrap(text, width) {\r\n      text.each(function () {\r\n        const text = d3.select(this);\r\n        const words = text.text().split(/\\s+/).reverse();\r\n        let word;\r\n        let line = [];\r\n        let lineNumber = 0;\r\n        const lineHeight = 1.1; // ems\r\n        const y = text.attr(\"y\");\r\n        const x = text.attr(\"x\");\r\n        const dy = parseFloat(text.attr(\"dy\"));\r\n\r\n        let tspan = text\r\n          .text(null)\r\n          .append(\"tspan\")\r\n          .attr(\"x\", x)\r\n          .attr(\"y\", y)\r\n          .attr(\"dy\", dy + \"em\");\r\n\r\n        while ((word = words.pop())) {\r\n          line.push(word);\r\n          tspan.text(line.join(\" \"));\r\n          if (tspan.node().getComputedTextLength() > width) {\r\n            line.pop();\r\n            tspan.text(line.join(\" \"));\r\n            line = [word];\r\n            tspan = text\r\n              .append(\"tspan\")\r\n              .attr(\"x\", x)\r\n              .attr(\"y\", y)\r\n              .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\r\n              .text(word);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [categoryCounts]);\r\n\r\n  return (\r\n    <>\r\n      <h3>Categories Pie Chart</h3>\r\n      <h1>({month} Month)</h1>\r\n      <div ref={chartRef}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PieChartData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}