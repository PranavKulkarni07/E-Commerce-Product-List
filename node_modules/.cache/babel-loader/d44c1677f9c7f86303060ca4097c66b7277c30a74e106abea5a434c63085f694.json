{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRIKRISHNA\\\\Desktop\\\\Roxiler_Task\\\\Client\\\\products\\\\src\\\\Charts\\\\PriceRangeBarChart.js\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceRangeBarChart = ({\n  priceRanges\n}) => {\n  if (!priceRanges || Object.keys(priceRanges).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Object.entries(priceranges || {}).map(([range, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [range, \": \", count]\n    }, range, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n  const data = Object.entries(priceRanges).map(([range, count]) => ({\n    range,\n    count\n  }));\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 800,\n    height: 400,\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"count\",\n      fill: \"#8884d8\",\n      name: \"Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = PriceRangeBarChart;\nexport default PriceRangeBarChart;\nvar _c;\n$RefreshReg$(_c, \"PriceRangeBarChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","PriceRangeBarChart","priceRanges","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","priceranges","map","range","count","data","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","name","_c","$RefreshReg$"],"sources":["C:/Users/SHRIKRISHNA/Desktop/Roxiler_Task/Client/products/src/Charts/PriceRangeBarChart.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst PriceRangeBarChart = ({ priceRanges }) => {\r\n  if (!priceRanges || Object.keys(priceRanges).length === 0) {\r\n    return <div>No data available</div>;\r\n  }\r\n  <ul>\r\n    {Object.entries(priceranges || {}).map(([range, count]) => (\r\n      <li key={range}>\r\n        {range}: {count}\r\n      </li>\r\n    ))}\r\n  </ul>;\r\n  const data = Object.entries(priceRanges).map(([range, count]) => ({\r\n    range,\r\n    count,\r\n  }));\r\n\r\n  return (\r\n    <BarChart\r\n      width={800}\r\n      height={400}\r\n      data={data}\r\n      margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"range\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey=\"count\" fill=\"#8884d8\" name=\"Count\" />\r\n    </BarChart>\r\n  );\r\n};\r\n\r\nexport default PriceRangeBarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAC9C,IAAI,CAACA,WAAW,IAAIC,MAAM,CAACC,IAAI,CAACF,WAAW,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;IACzD,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EACA,aAAAV,OAAA;IAAAM,QAAA,EACGH,MAAM,CAACQ,OAAO,CAACC,WAAW,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,kBACpDf,OAAA;MAAAM,QAAA,GACGQ,KAAK,EAAC,IAAE,EAACC,KAAK;IAAA,GADRD,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;EACL,MAAMM,IAAI,GAAGb,MAAM,CAACQ,OAAO,CAACT,WAAW,CAAC,CAACW,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,MAAM;IAChED,KAAK;IACLC;EACF,CAAC,CAAC,CAAC;EAEH,oBACEf,OAAA,CAACR,QAAQ;IACPyB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZF,IAAI,EAAEA,IAAK;IACXG,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAAjB,QAAA,gBAEpDN,OAAA,CAACJ,aAAa;MAAC4B,eAAe,EAAC;IAAK;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCV,OAAA,CAACN,KAAK;MAAC+B,OAAO,EAAC;IAAO;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBV,OAAA,CAACL,KAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTV,OAAA,CAACH,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXV,OAAA,CAACF,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVV,OAAA,CAACP,GAAG;MAACgC,OAAO,EAAC,OAAO;MAACC,IAAI,EAAC,SAAS;MAACC,IAAI,EAAC;IAAO;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEf,CAAC;AAACkB,EAAA,GA/BI3B,kBAAkB;AAiCxB,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}